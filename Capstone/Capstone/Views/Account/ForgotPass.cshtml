@model Capstone.Models.ForgotPasswordModel

@{
 Layout = "~/Views/Shared/_Layout.cshtml";
}

    <h2>Forgot Password</h2>
    <p>
        Please enter your user name and the email that you registered with.
        Your password will be reset.
    </p>

    @{
        if (TempData["passwordSent"] != null)
        {
            @Html.Raw("<h3 style='text-decoration:underline'>");
            @Html.Encode("*Password was sent successfully!*");
            @Html.Raw("</h3>");
            TempData.Clear();
        }
        else if (TempData["credentialError"] != null)
        {
            @Html.Raw("<h3 style='text-decoration:underline'>");
            @Html.Encode("*Credentials do not match!*");
            @Html.Raw("</h3>");
            TempData.Clear();
        }
    }

    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true, "Validation was unsuccessful. Please correct the errors and try again.")
        <div>
            <fieldset>
                <legend>Username and Password</legend>
                
                <div class="editor-label">
                    @Html.LabelFor(m => m.username)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.username)
                    @Html.ValidationMessageFor(m => m.username)
                </div>
                
                <div class="editor-label">
                    @Html.LabelFor(m => m.regEmail)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.regEmail)
                    @Html.ValidationMessageFor(m => m.regEmail)
                </div>      
                <p>
                    <input type="submit" value="Send Password" />
                </p>
            </fieldset>
        </div>
    }
